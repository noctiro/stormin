use rand::{Rng, RngCore};

static ADJECTIVES: &[&str] = &[
    "silent",
    "dark",
    "swift",
    "happy",
    "crazy",
    "cool",
    "smart",
    "lucky",
    "brave",
    "epic",
    "fuzzy",
    "wild",
    "mighty",
    "frozen",
    "hot",
    "shiny",
    "stealthy",
    "stormy",
    "dusty",
    "fierce",
    "agile",
    "blazing",
    "booming",
    "bright",
    "bold",
    "calm",
    "crafty",
    "daring",
    "deadly",
    "electric",
    "endless",
    "exotic",
    "fiery",
    "gentle",
    "ghostly",
    "grand",
    "grateful",
    "hairy",
    "hungry",
    "icy",
    "jealous",
    "jolly",
    "keen",
    "lofty",
    "magical",
    "massive",
    "modern",
    "mortal",
    "narrow",
    "noble",
    "ominous",
    "peaceful",
    "perfect",
    "primal",
    "proud",
    "radiant",
    "rapid",
    "reckless",
    "royal",
    "sacred",
    "sealed",
    "secret",
    "shallow",
    "slippery",
    "smoldering",
    "solitary",
    "soaring",
    "soft",
    "somber",
    "sparkling",
    "splendid",
    "spontaneous",
    "subtle",
    "towering",
    "tranquil",
    "untamed",
    "urban",
    "valiant",
    "vibrant",
    "vicious",
    "vigilant",
    "vivid",
    "volatile",
    "wandering",
    "weary",
    "wicked",
    "zany",
    "abstract",
    "acidic",
    "alpine",
    "amber",
    "ancient",
    "arcade",
    "aromatic",
    "astral",
    "atomic",
    "autumn",
    "azure",
    "balanced",
    "battered",
    "binary",
    "bitter",
    "bizarre",
    "blissful",
    "blooming",
    "blurry",
    "bronze",
    "brutal",
    "bubbling",
    "bustling",
    "carbon",
    "celestial",
    "ceramic",
    "cerulean",
    "chaotic",
    "charged",
    "charming",
    "chemical",
    "chilly",
    "chrome",
    "circular",
    "classic",
    "clever",
    "coastal",
    "colossal",
    "comic",
    "complex",
    "concrete",
    "copper",
    "coral",
    "cosmic",
    "cotton",
    "creative",
    "crimson",
    "crystal",
    "curious",
    "curvy",
    "cyber",
    "dancing",
    "dapper",
    "dazzling",
    "deep",
    "delta",
    "dense",
    "desert",
    "devoted",
    "digital",
    "direct",
    "divine",
    "drifting",
    "dynamic",
    "eastern",
    "ebony",
    "elder",
    "elemental",
    "emerald",
    "energetic",
    "enigmatic",
    "eternal",
    "ethereal",
    "evolving",
    "fabled",
    "faded",
    "falling",
    "fancy",
    "fantastic",
    "feral",
    "festive",
    "flaming",
    "flawless",
    "fluid",
    "flying",
    "foggy",
    "formal",
    "fragile",
    "fragrant",
    "frantic",
    "free",
    "fresh",
    "frosty",
    "fuming",
    "funky",
    "future",
    "galactic",
    "gamma",
    "glassy",
    "gleaming",
    "glitchy",
    "global",
    "glowing",
    "golden",
    "graceful",
    "granite",
    "graphic",
    "grave",
    "groovy",
    "growing",
    "gushing",
    "harmonic",
    "hazy",
    "heavy",
    "hidden",
    "hollow",
    "holographic",
    "horizontal",
    "howling",
    "humble",
    "hyper",
    "iconic",
    "ideal",
    "illusive",
    "industrial",
    "infinite",
    "intense",
    "inverted",
    "iridescent",
    "irregular",
    "jade",
    "jagged",
    "jasmine",
    "jovial",
    "jubilant",
    "jumbo",
    "jungle",
    "kinetic",
    "laser",
    "lasting",
    "lavender",
    "layered",
    "leading",
    "lean",
    "legendary",
    "light",
    "limitless",
    "linear",
    "liquid",
    "lively",
    "lonely",
    "loud",
    "luminous",
    "lunar",
    "lush",
    "majestic",
    "maple",
    "marble",
    "marine",
    "master",
    "meadow",
    "mega",
    "melodic",
    "melting",
    "mental",
    "mercury",
    "metallic",
    "midnight",
    "mighty",
    "mineral",
    "minimal",
    "misty",
    "mobile",
    "molten",
    "mossy",
    "mountain",
    "murky",
    "mystic",
    "natural",
    "neon",
    "neural",
    "nimble",
    "nocturnal",
    "nomadic",
    "northern",
    "notable",
    "novel",
    "obsidian",
    "oceanic",
    "odd",
    "olive",
    "olympian",
    "onyx",
    "opal",
    "optical",
    "optimal",
    "orange",
    "orbital",
    "organic",
    "oriental",
    "ornate",
    "parallel",
    "passive",
    "patient",
    "pearl",
    "peculiar",
    "phantom",
    "phosphoric",
    "pioneering",
    "plain",
    "plasma",
    "platinum",
    "pleasant",
    "plush",
    "polar",
    "polished",
    "popping",
    "porous",
    "positive",
    "potential",
    "precious",
    "premium",
    "pristine",
    "psychic",
    "pumping",
    "purple",
    "quantum",
    "quartz",
    "quiet",
    "quirky",
    "radical",
    "rainy",
    "rational",
    "reactive",
    "refined",
    "reflective",
    "refreshing",
    "remote",
    "resonant",
    "retro",
    "rising",
    "roaming",
    "robust",
    "rocky",
    "rolling",
    "rosy",
    "rotating",
    "round",
    "rugged",
    "runic",
    "rural",
    "rustic",
    "salty",
    "sandy",
    "sapphire",
    "savage",
    "scenic",
    "scholar",
    "scientific",
    "scorching",
    "seaside",
    "second",
    "sensual",
    "serene",
    "shaded",
    "shadowy",
    "sharp",
    "shifting",
    "shimmering",
    "silent",
    "silver",
    "simple",
    "sinister",
    "sleek",
    "slick",
    "smooth",
    "snowy",
    "sober",
    "sonic",
    "soulful",
    "southern",
    "spatial",
    "special",
    "speedy",
    "spicy",
    "spiritual",
    "splashy",
    "spring",
    "static",
    "steady",
    "steam",
    "stellar",
    "strange",
    "streaming",
    "sturdy",
    "stylish",
    "subtle",
    "sudden",
    "summer",
    "sunny",
    "super",
    "superior",
    "supreme",
    "surreal",
    "sweet",
    "swift",
    "tactical",
    "tangy",
    "technical",
    "teal",
    "temporal",
    "tender",
    "tense",
    "terminal",
    "thick",
    "thin",
    "thorny",
    "thriller",
    "thundering",
    "tidal",
    "timeless",
    "tingling",
    "tiny",
    "titanium",
    "tropical",
    "true",
    "turbulent",
    "twilight",
    "twisting",
    "ultra",
    "unified",
    "unique",
    "universal",
    "unknown",
    "unstable",
    "unusual",
    "upbeat",
    "upright",
    "urgent",
    "utopian",
    "vacant",
    "vague",
    "variable",
    "varied",
    "vast",
    "velvet",
    "venomous",
    "verbal",
    "verdant",
    "vertical",
    "veteran",
    "vibrating",
    "victorious",
    "vintage",
    "violet",
    "virtual",
    "visual",
    "vital",
    "vivacious",
    "vocal",
    "void",
    "volcanic",
    "warm",
    "watery",
    "waving",
    "wealthy",
    "western",
    "whimsical",
    "whirling",
    "wild",
    "windy",
    "winter",
    "wireless",
    "wise",
    "wispy",
    "witty",
    "wizened",
    "wonderful",
    "wooden",
    "worldly",
    "worthy",
    "xenial",
    "yellow",
    "yielding",
    "young",
    "zealous",
    "zenith",
    "zesty",
    "zigzag",
    "zinc",
];

static NOUNS: &[&str] = &[
    "ninja",
    "tiger",
    "wizard",
    "dragon",
    "phoenix",
    "hacker",
    "ghost",
    "agent",
    "knight",
    "lion",
    "eagle",
    "viper",
    "wolf",
    "panther",
    "raven",
    "hunter",
    "mage",
    "rogue",
    "warrior",
    "pirate",
    "astronaut",
    "artist",
    "assassin",
    "barbarian",
    "beast",
    "bishop",
    "blade",
    "bomber",
    "broker",
    "captain",
    "cardinal",
    "champion",
    "chameleon",
    "conqueror",
    "counselor",
    "courier",
    "crusader",
    "dealer",
    "detective",
    "diplomat",
    "diva",
    "duke",
    "emperor",
    "engineer",
    "explorer",
    "fanatic",
    "farmer",
    "fighter",
    "gunslinger",
    "guardian",
    "judge",
    "kingmaker",
    "legislator",
    "liberator",
    "maestro",
    "merchant",
    "messenger",
    "monarch",
    "nomad",
    "officer",
    "overlord",
    "paladin",
    "peasant",
    "pilot",
    "prisoner",
    "prophet",
    "protector",
    "ranger",
    "rebel",
    "referee",
    "scout",
    "senator",
    "shepherd",
    "soldier",
    "spectator",
    "strategist",
    "survivor",
    "titan",
    "troubadour",
    "tyrant",
    "vanguard",
    "villager",
    "wanderer",
    "wizard",
    "zookeeper",
    "admiral",
    "alchemist",
    "android",
    "angel",
    "angler",
    "archer",
    "architect",
    "archivist",
    "athlete",
    "auditor",
    "avatar",
    "avenger",
    "baker",
    "bandit",
    "banker",
    "bard",
    "baron",
    "beacon",
    "bear",
    "bee",
    "beggar",
    "berserker",
    "banshee",
    "blacksmith",
    "blaster",
    "brawler",
    "brigadier",
    "buddha",
    "buffalo",
    "builder",
    "burglar",
    "butcher",
    "cadet",
    "canary",
    "candle",
    "cannon",
    "caravan",
    "carrier",
    "cartographer",
    "centaur",
    "chaos",
    "chemist",
    "chieftain",
    "cleric",
    "climber",
    "colonel",
    "commander",
    "composer",
    "conjurer",
    "copycat",
    "corsair",
    "cowboy",
    "craftsman",
    "crafter",
    "crow",
    "curator",
    "custodian",
    "cyborg",
    "cyclone",
    "dancer",
    "deity",
    "demon",
    "designer",
    "desperado",
    "director",
    "disciple",
    "djinn",
    "docker",
    "doctor",
    "dolphin",
    "dreamer",
    "druid",
    "dryad",
    "duchess",
    "duelist",
    "dwarf",
    "dynamo",
    "elementalist",
    "elk",
    "emperor",
    "empress",
    "enchanter",
    "enforcer",
    "enigma",
    "envoy",
    "falcon",
    "fencer",
    "fiend",
    "firefighter",
    "fisher",
    "flamingo",
    "fortune",
    "fox",
    "friar",
    "frost",
    "gambler",
    "gardener",
    "gargoyle",
    "genie",
    "genius",
    "giant",
    "gladiator",
    "gnome",
    "golem",
    "gorilla",
    "gourmet",
    "gryphon",
    "gunner",
    "harbinger",
    "hawk",
    "healer",
    "herald",
    "hermit",
    "heroine",
    "highness",
    "hound",
    "hydra",
    "ice",
    "illusionist",
    "imp",
    "inferno",
    "inspector",
    "inventor",
    "jester",
    "juggler",
    "keeper",
    "khan",
    "king",
    "knave",
    "kraken",
    "lancer",
    "leader",
    "legend",
    "leopard",
    "librarian",
    "lich",
    "lord",
    "lynx",
    "machine",
    "magician",
    "mammoth",
    "marauder",
    "marine",
    "marksman",
    "marshal",
    "martian",
    "mascot",
    "master",
    "matador",
    "maven",
    "medic",
    "mentor",
    "mercenary",
    "mermaid",
    "mime",
    "minotaur",
    "miracle",
    "miser",
    "monk",
    "monster",
    "moose",
    "mosquito",
    "moth",
    "mountaineer",
    "mouse",
    "mule",
    "muse",
    "mushroom",
    "musician",
    "mutant",
    "navigator",
    "necromancer",
    "nightingale",
    "nightshade",
    "ninja",
    "noble",
    "nomad",
    "nymph",
    "observer",
    "octopus",
    "ogre",
    "oracle",
    "orator",
    "orchid",
    "osprey",
    "outlaw",
    "owl",
    "panda",
    "paragon",
    "parrot",
    "patron",
    "penguin",
    "pharaoh",
    "photon",
    "pilgrim",
    "pioneer",
    "pixel",
    "pixie",
    "planeteer",
    "planner",
    "poet",
    "prince",
    "princess",
    "prowler",
    "psion",
    "puma",
    "puppet",
    "queen",
    "rabbit",
    "raccoon",
    "raider",
    "ram",
    "rascal",
    "reaper",
    "rider",
    "robot",
    "rocket",
    "ronin",
    "rookie",
    "saboteur",
    "sage",
    "sailor",
    "saint",
    "samurai",
    "savage",
    "scholar",
    "scientist",
    "scorpion",
    "scribe",
    "sculptor",
    "seeker",
    "seer",
    "sentinel",
    "serpent",
    "servant",
    "settler",
    "shadow",
    "shaman",
    "shark",
    "sheriff",
    "shifter",
    "shinobi",
    "siren",
    "skater",
    "slayer",
    "sloth",
    "smith",
    "smuggler",
    "sniper",
    "sorcerer",
    "sorceress",
    "sparrow",
    "speaker",
    "specter",
    "sphinx",
    "spider",
    "spirit",
    "sprite",
    "spy",
    "squire",
    "stalker",
    "starfish",
    "statue",
    "steward",
    "stoic",
    "stone",
    "storm",
    "storyteller",
    "striker",
    "student",
    "summoner",
    "swordsman",
    "sylph",
    "tailor",
    "talon",
    "tamer",
    "tank",
    "teacher",
    "templar",
    "terminator",
    "thinker",
    "thorns",
    "thunder",
    "timelord",
    "tinker",
    "tortoise",
    "trader",
    "trainer",
    "traveler",
    "treasure",
    "trickster",
    "turtle",
    "unicorn",
    "valkyrie",
    "vampire",
    "vandal",
    "vanguard",
    "vessel",
    "veteran",
    "victor",
    "vigilante",
    "viking",
    "villain",
    "vine",
    "vixen",
    "voyager",
    "vulture",
    "walrus",
    "warden",
    "warlock",
    "watcher",
    "weaver",
    "whale",
    "witch",
    "wolf",
    "woodsman",
    "wyvern",
    "xenomorph",
    "yakuza",
    "yeti",
    "youth",
    "zealot",
    "zebra",
    "zephyr",
    "zombie",
];

static VERBS: &[&str] = &[
    "run",
    "fly",
    "hack",
    "jump",
    "dash",
    "spin",
    "strike",
    "burn",
    "sneak",
    "zoom",
    "blaze",
    "bounce",
    "break",
    "build",
    "charge",
    "climb",
    "crush",
    "dive",
    "drift",
    "drive",
    "echo",
    "explore",
    "float",
    "forge",
    "freeze",
    "glide",
    "grind",
    "growl",
    "ignite",
    "lash",
    "leap",
    "march",
    "melt",
    "mine",
    "mix",
    "morph",
    "pack",
    "paint",
    "power",
    "prove",
    "quake",
    "race",
    "rebel",
    "reform",
    "resist",
    "rip",
    "roll",
    "rush",
    "scan",
    "sail",
    "scheme",
    "sculpt",
    "search",
    "shock",
    "shoot",
    "show",
    "slide",
    "soar",
    "spark",
    "split",
    "spread",
    "stamp",
    "steal",
    "storm",
    "surf",
    "swing",
    "tackle",
    "teleport",
    "thunder",
    "track",
    "transform",
    "twirl",
    "unite",
    "vanish",
    "venture",
    "weave",
    "absorb",
    "access",
    "achieve",
    "adapt",
    "advance",
    "amplify",
    "analyze",
    "animate",
    "append",
    "apply",
    "architect",
    "archive",
    "armor",
    "assemble",
    "assess",
    "assist",
    "attack",
    "attract",
    "audit",
    "augment",
    "awaken",
    "backup",
    "balance",
    "battle",
    "beam",
    "bend",
    "bind",
    "blast",
    "blend",
    "blink",
    "block",
    "bloom",
    "blur",
    "boost",
    "breach",
    "breathe",
    "brew",
    "bridge",
    "broadcast",
    "browse",
    "burst",
    "calculate",
    "calibrate",
    "capture",
    "carve",
    "cast",
    "catch",
    "center",
    "channel",
    "chat",
    "check",
    "chop",
    "circle",
    "cite",
    "claim",
    "clap",
    "clash",
    "click",
    "clone",
    "close",
    "code",
    "coil",
    "collect",
    "collide",
    "combine",
    "command",
    "compile",
    "complete",
    "compose",
    "compute",
    "conceal",
    "configure",
    "connect",
    "construct",
    "contain",
    "convert",
    "convey",
    "cook",
    "copy",
    "correct",
    "create",
    "cross",
    "crown",
    "crunch",
    "cube",
    "cycle",
    "dart",
    "debug",
    "decode",
    "decrypt",
    "defeat",
    "defend",
    "define",
    "deflect",
    "delete",
    "deliver",
    "deploy",
    "design",
    "destroy",
    "detect",
    "develop",
    "digest",
    "direct",
    "disable",
    "discard",
    "discover",
    "display",
    "disrupt",
    "distill",
    "divide",
    "dodge",
    "download",
    "draft",
    "draw",
    "dream",
    "drill",
    "drop",
    "duel",
    "edit",
    "eject",
    "elevate",
    "embed",
    "emerge",
    "emit",
    "empower",
    "enable",
    "encode",
    "encrypt",
    "endure",
    "energize",
    "enforce",
    "engage",
    "engineer",
    "enhance",
    "enlarge",
    "enlighten",
    "enter",
    "escape",
    "evade",
    "evolve",
    "exalt",
    "exceed",
    "excel",
    "exchange",
    "excite",
    "execute",
    "exhale",
    "expand",
    "explain",
    "export",
    "extend",
    "extract",
    "face",
    "fade",
    "fathom",
    "feed",
    "fetch",
    "filter",
    "fire",
    "fix",
    "flame",
    "flash",
    "flip",
    "focus",
    "fold",
    "follow",
    "form",
    "fortify",
    "frame",
    "free",
    "fuel",
    "function",
    "fuse",
    "gather",
    "generate",
    "give",
    "glow",
    "grab",
    "graft",
    "grant",
    "grasp",
    "greet",
    "guard",
    "guide",
    "handle",
    "hang",
    "harvest",
    "heal",
    "hear",
    "heat",
    "help",
    "hide",
    "hold",
    "hook",
    "host",
    "hover",
    "hunt",
    "hurl",
    "identify",
    "illuminate",
    "imagine",
    "impact",
    "implement",
    "import",
    "improve",
    "index",
    "infuse",
    "inject",
    "innovate",
    "insert",
    "inspect",
    "inspire",
    "install",
    "integrate",
    "intercept",
    "interface",
    "invent",
    "invert",
    "invoke",
    "iterate",
    "join",
    "judge",
    "juggle",
    "key",
    "kick",
    "land",
    "launch",
    "layer",
    "learn",
    "level",
    "lift",
    "light",
    "link",
    "listen",
    "load",
    "lock",
    "loom",
    "loop",
    "lunge",
    "maintain",
    "make",
    "manage",
    "map",
    "mark",
    "mask",
    "master",
    "match",
    "measure",
    "mend",
    "merge",
    "migrate",
    "mirror",
    "model",
    "modify",
    "monitor",
    "mount",
    "move",
    "mute",
    "navigate",
    "nest",
    "nod",
    "open",
    "operate",
    "optimize",
    "order",
    "organize",
    "outrun",
    "override",
    "pace",
    "parse",
    "patch",
    "pause",
    "peek",
    "perceive",
    "perform",
    "phase",
    "pick",
    "pivot",
    "plan",
    "play",
    "plot",
    "plug",
    "point",
    "poke",
    "polish",
    "port",
    "pose",
    "post",
    "pour",
    "predict",
    "prepare",
    "press",
    "print",
    "process",
    "produce",
    "program",
    "project",
    "prompt",
    "protect",
    "provide",
    "pull",
    "pump",
    "punch",
    "purge",
    "purify",
    "push",
    "query",
    "queue",
    "quicken",
    "raise",
    "rally",
    "rank",
    "read",
    "reboot",
    "recall",
    "receive",
    "recharge",
    "reclaim",
    "record",
    "recruit",
    "recycle",
    "reduce",
    "refine",
    "reflect",
    "refresh",
    "refuel",
    "regenerate",
    "register",
    "reinforce",
    "release",
    "reload",
    "remedy",
    "remove",
    "render",
    "repair",
    "repeat",
    "replace",
    "replicate",
    "report",
    "rescue",
    "research",
    "reshape",
    "resolve",
    "respond",
    "restore",
    "retrieve",
    "return",
    "reveal",
    "review",
    "rewind",
    "ride",
    "rig",
    "rinse",
    "rise",
    "roar",
    "rotate",
    "route",
    "rule",
    "salvage",
    "sample",
    "save",
    "scale",
    "scan",
    "scatter",
    "scout",
    "scrape",
    "screen",
    "scroll",
    "seal",
    "secure",
    "seek",
    "select",
    "send",
    "sense",
    "separate",
    "sequence",
    "serve",
    "set",
    "sever",
    "shade",
    "shape",
    "share",
    "sharpen",
    "shield",
    "shift",
    "shine",
    "shred",
    "shuffle",
    "signal",
    "simulate",
    "sketch",
    "skip",
    "slam",
    "slash",
    "sleep",
    "slice",
    "slip",
    "smash",
    "smell",
    "snap",
    "snatch",
    "sort",
    "sound",
    "span",
    "speak",
    "speed",
    "spell",
    "spend",
    "spill",
    "spin",
    "splash",
    "splice",
    "spring",
    "sprint",
    "squeeze",
    "stabilize",
    "stack",
    "stage",
    "stalk",
    "stand",
    "start",
    "state",
    "steer",
    "step",
    "stick",
    "stimulate",
    "stir",
    "stock",
    "stop",
    "store",
    "stream",
    "stretch",
    "strike",
    "strip",
    "stroke",
    "structure",
    "study",
    "stun",
    "submit",
    "suggest",
    "summon",
    "supply",
    "support",
    "suppress",
    "surge",
    "survey",
    "suspend",
    "swap",
    "sweep",
    "swerve",
    "switch",
    "sync",
    "synthesize",
    "tag",
    "take",
    "talk",
    "tame",
    "tap",
    "target",
    "teach",
    "tear",
    "tease",
    "tell",
    "test",
    "throw",
    "tilt",
    "time",
    "toggle",
    "tone",
    "touch",
    "trace",
    "trade",
    "train",
    "transfer",
    "translate",
    "transmit",
    "trap",
    "travel",
    "trigger",
    "trim",
    "tune",
    "turn",
    "twist",
    "type",
    "uncover",
    "undo",
    "unfold",
    "unify",
    "unlock",
    "unpack",
    "update",
    "upgrade",
    "upload",
    "use",
    "validate",
    "value",
    "verify",
    "view",
    "visualize",
    "voice",
    "wake",
    "walk",
    "wander",
    "ward",
    "warm",
    "warn",
    "wash",
    "watch",
    "wave",
    "weld",
    "whirl",
    "whisper",
    "win",
    "wind",
    "wire",
    "wish",
    "work",
    "wrap",
    "write",
    "yield",
    "zap",
    "zoom",
];

static TECH_WORDS: &[&str] = &[
    "byte",
    "bit",
    "net",
    "cloud",
    "data",
    "cyber",
    "matrix",
    "script",
    "code",
    "dev",
    "ai",
    "bot",
    "exe",
    "dll",
    "io",
    "sys",
    "core",
    "spark",
    "pulse",
    "flux",
    "algorithm",
    "api",
    "array",
    "backup",
    "binary",
    "bluetooth",
    "buffer",
    "cache",
    "chipset",
    "client",
    "cluster",
    "compiler",
    "console",
    "cookie",
    "crypto",
    "debug",
    "desktop",
    "digital",
    "disk",
    "domain",
    "driver",
    "dynamic",
    "ethernet",
    "firewall",
    "firmware",
    "gateway",
    "graphql",
    "gpu",
    "gui",
    "hash",
    "http",
    "https",
    "identity",
    "index",
    "interface",
    "kernel",
    "library",
    "logic",
    "machine",
    "memory",
    "monitor",
    "module",
    "network",
    "node",
    "object",
    "packet",
    "parser",
    "platform",
    "protocol",
    "query",
    "queue",
    "router",
    "runtime",
    "schema",
    "server",
    "socket",
    "source",
    "storage",
    "syntax",
    "token",
    "transistor",
    "udp",
    "unicode",
    "usb",
    "variable",
    "virtual",
    "widget",
    "xml",
    "xpath",
    "zip",
    "access",
    "acid",
    "adapter",
    "address",
    "admin",
    "aggregate",
    "agile",
    "alias",
    "allocate",
    "analog",
    "analyze",
    "anchor",
    "anonymous",
    "antialiasing",
    "applet",
    "archive",
    "argument",
    "arithmetic",
    "ark",
    "artifact",
    "ascii",
    "aspect",
    "assembler",
    "assert",
    "asset",
    "async",
    "atomic",
    "attribute",
    "auth",
    "autocomplete",
    "automate",
    "avatar",
    "axis",
    "backbone",
    "backend",
    "bandwidth",
    "banner",
    "baseline",
    "batch",
    "beacon",
    "benchmark",
    "beta",
    "binding",
    "biometric",
    "block",
    "blockchain",
    "bloom",
    "boot",
    "branch",
    "breach",
    "breakpoint",
    "bridge",
    "broker",
    "browser",
    "bucket",
    "bug",
    "build",
    "bundle",
    "bus",
    "bypass",
    "bytecode",
    "caching",
    "canvas",
    "capture",
    "carrier",
    "cascade",
    "channel",
    "charset",
    "chassis",
    "checkpoint",
    "chip",
    "cipher",
    "circuit",
    "class",
    "clay",
    "click",
    "client",
    "clone",
    "closure",
    "cloud",
    "cluster",
    "codec",
    "collapse",
    "collection",
    "collision",
    "column",
    "commit",
    "compress",
    "compute",
    "concat",
    "concurrent",
    "config",
    "connect",
    "constant",
    "constraint",
    "container",
    "context",
    "controller",
    "convert",
    "cookie",
    "core",
    "cors",
    "counter",
    "crawler",
    "credential",
    "cron",
    "cross",
    "crowdsource",
    "crystal",
    "cube",
    "cursor",
    "cycle",
    "daemon",
    "dashboard",
    "dataflow",
    "dataset",
    "decode",
    "decompress",
    "decrypt",
    "deep",
    "default",
    "defer",
    "defrag",
    "delta",
    "deploy",
    "derive",
    "deserialize",
    "design",
    "desktop",
    "detect",
    "device",
    "diagram",
    "digest",
    "dimension",
    "direct",
    "directive",
    "directory",
    "dispatch",
    "dither",
    "docker",
    "document",
    "dome",
    "dotnet",
    "download",
    "draft",
    "drag",
    "drain",
    "drift",
    "driver",
    "drone",
    "drop",
    "duplex",
    "dynamic",
    "edge",
    "elastic",
    "electron",
    "element",
    "emacs",
    "embed",
    "emitter",
    "emulate",
    "enable",
    "encode",
    "encrypt",
    "endpoint",
    "engine",
    "enhance",
    "entity",
    "entry",
    "enum",
    "environment",
    "epic",
    "error",
    "escape",
    "eval",
    "event",
    "exception",
    "exchange",
    "exec",
    "expand",
    "export",
    "express",
    "extend",
    "extract",
    "fabric",
    "facade",
    "factor",
    "factory",
    "failover",
    "false",
    "farm",
    "feature",
    "fetch",
    "fiber",
    "field",
    "file",
    "filter",
    "firmware",
    "flag",
    "flash",
    "float",
    "floppy",
    "flow",
    "flush",
    "focus",
    "folder",
    "font",
    "footer",
    "fork",
    "form",
    "format",
    "fragment",
    "frame",
    "frontend",
    "function",
    "fusion",
    "future",
    "fuzzy",
    "gate",
    "gem",
    "generate",
    "generic",
    "getter",
    "git",
    "glyph",
    "gradle",
    "graph",
    "grid",
    "group",
    "guard",
    "guest",
    "handle",
    "hardware",
    "harmony",
    "header",
    "heap",
    "hexadecimal",
    "hidden",
    "hierarchy",
    "host",
    "hover",
    "hybrid",
    "hyperlink",
    "hypertext",
    "icon",
    "iframe",
    "image",
    "immutable",
    "import",
    "inbox",
    "increment",
    "indent",
    "index",
    "infer",
    "infinite",
    "inherit",
    "init",
    "inject",
    "inline",
    "input",
    "instance",
    "integer",
    "integrate",
    "intel",
    "interact",
    "internal",
    "interrupt",
    "interval",
    "iterate",
    "jit",
    "join",
    "journal",
    "jquery",
    "json",
    "jump",
    "junit",
    "jvm",
    "key",
    "keyboard",
    "keyframe",
    "lambda",
    "launch",
    "layer",
    "layout",
    "legacy",
    "level",
    "lifecycle",
    "limit",
    "linear",
    "link",
    "list",
    "listener",
    "load",
    "local",
    "lock",
    "logger",
    "login",
    "loop",
    "lossless",
    "macro",
    "mail",
    "main",
    "manifest",
    "map",
    "markdown",
    "match",
    "maven",
    "media",
    "member",
    "mesh",
    "message",
    "meta",
    "method",
    "metric",
    "micro",
    "middleware",
    "mime",
    "mine",
    "minify",
    "mobile",
    "mock",
    "mode",
    "model",
    "modem",
    "module",
    "monitor",
    "mount",
    "multi",
    "mutation",
    "mute",
    "nano",
    "native",
    "navigate",
    "nest",
    "neural",
    "nexus",
    "node",
    "noise",
    "norm",
    "notebook",
    "notify",
    "null",
    "numeric",
    "oauth",
    "object",
    "octal",
    "offset",
    "online",
    "opaque",
    "open",
    "operand",
    "optimize",
    "option",
    "oracle",
    "order",
    "origin",
    "output",
    "overflow",
    "overlay",
    "override",
    "package",
    "pad",
    "page",
    "pair",
    "palette",
    "parallel",
    "param",
    "parent",
    "parse",
    "partial",
    "partition",
    "passive",
    "patch",
    "path",
    "pattern",
    "pause",
    "payload",
    "peer",
    "pending",
    "perforce",
    "perform",
    "period",
    "persist",
    "phantom",
    "phase",
    "phoenix",
    "physical",
    "pipeline",
    "pixel",
    "placeholder",
    "plugin",
    "point",
    "pointer",
    "policy",
    "poll",
    "pool",
    "popup",
    "port",
    "portal",
    "post",
    "power",
    "pragma",
    "predicate",
    "prefix",
    "preload",
    "preprocess",
    "preserve",
    "preset",
    "primary",
    "prime",
    "primitive",
    "print",
    "priority",
    "private",
    "process",
    "profile",
    "program",
    "project",
    "promise",
    "prompt",
    "prop",
    "property",
    "protect",
    "prototype",
    "proxy",
    "public",
    "publish",
    "pull",
    "push",
    "python",
    "quantum",
    "query",
    "queue",
    "quota",
    "radial",
    "radio",
    "radius",
    "raid",
    "random",
    "range",
    "react",
    "readonly",
    "real",
    "rebase",
    "record",
    "rect",
    "recycle",
    "redirect",
    "redis",
    "reduce",
    "ref",
    "reflect",
    "refresh",
    "register",
    "regular",
    "relational",
    "relative",
    "release",
    "remote",
    "render",
    "repeat",
    "replica",
    "request",
    "require",
    "reset",
    "resize",
    "resource",
    "response",
    "restore",
    "restrict",
    "result",
    "resume",
    "retry",
    "reuse",
    "reverse",
    "revert",
    "review",
    "revision",
    "rewrite",
    "ribbon",
    "rich",
    "right",
    "rigid",
    "robot",
    "role",
    "rollback",
    "root",
    "rotate",
    "route",
    "row",
    "ruby",
    "rule",
    "runner",
    "rust",
    "sample",
    "sandbox",
    "scale",
    "scan",
    "schedule",
    "schema",
    "scope",
    "screen",
    "script",
    "scroll",
    "sdk",
    "search",
    "section",
    "secure",
    "seed",
    "segment",
    "select",
    "selenium",
    "semantic",
    "sequence",
    "serial",
    "serialize",
    "serve",
    "service",
    "session",
    "set",
    "setter",
    "setup",
    "sftp",
    "shader",
    "shadow",
    "shard",
    "share",
    "shell",
    "shift",
    "shortcut",
    "shuffle",
    "signal",
    "signature",
    "site",
    "size",
    "sketch",
    "skip",
    "slab",
    "slack",
    "slice",
    "slide",
    "slot",
    "smart",
    "snapshot",
    "soap",
    "social",
    "soft",
    "solid",
    "sort",
    "sound",
    "source",
    "span",
    "spatial",
    "spawn",
    "spec",
    "speed",
    "sphere",
    "spike",
    "spindle",
    "splash",
    "spool",
    "spring",
    "sprite",
    "spy",
    "sql",
    "ssh",
    "stack",
    "stage",
    "stale",
    "standard",
    "state",
    "static",
    "stats",
    "status",
    "stellar",
    "step",
    "sticky",
    "stone",
    "stop",
    "store",
    "stream",
    "string",
    "strip",
    "strong",
    "struct",
    "stub",
    "studio",
    "style",
    "subnet",
    "subquery",
    "subscribe",
    "subset",
    "sudo",
    "suffix",
    "sum",
    "superuser",
    "support",
    "surface",
    "surge",
    "suspend",
    "swap",
    "swift",
    "swing",
    "switch",
    "sync",
    "system",
    "tab",
    "table",
    "tablet",
    "tag",
    "target",
    "task",
    "tcp",
    "team",
    "technique",
    "template",
    "temporal",
    "tensor",
    "term",
    "terminal",
    "test",
    "text",
    "texture",
    "theme",
    "thread",
    "threshold",
    "thumbnail",
    "tick",
    "tier",
    "tile",
    "timeline",
    "timeout",
    "timer",
    "timestamp",
    "tip",
    "title",
    "toggle",
    "token",
    "tool",
    "tooltip",
    "topic",
    "trace",
    "track",
    "traffic",
    "train",
    "transaction",
    "transform",
    "transition",
    "translate",
    "transmit",
    "tree",
    "trigger",
    "trim",
];

static COMMON_SUFFIXES: &[&str] = &[
    "x", "z", "gg", "wp", "ez", "lol", "dev", "io", "bot", "pro", "exe", "sys", "app", "net",
    "master", "slayer", "killer", "walker", "rider", "one", "007", "123", "2024", "88", "alpha",
    "beta", "gamma", "delta", "omega", "king", "queen", "star", "hero", "boss", "amplify", "arc",
    "arrow", "atom", "aura", "blade", "blast", "bloom", "cafe", "calm", "chase", "charm",
    "circuit", "clique", "crest", "dash", "deed", "design", "drift", "edge", "elite", "era",
    "factor", "force", "gauge", "gem", "grid", "groove", "halo", "harmony", "hive", "icon",
    "impact", "link", "loop", "magic", "marvel", "mesh", "mode", "motif", "nexus", "orbit", "pace",
    "path", "phase", "portal", "rally", "realm", "saga", "scale", "shift", "stash", "surge",
    "swirl", "trance", "trend", "venture", "vibe", "vista", "zone",
];

pub fn generate_username<T: RngCore + Rng>(rng: &mut T) -> String {
    // Pre-allocate with a reasonable capacity to avoid reallocations
    let mut result = String::with_capacity(64);

    // Extract all random bits at once instead of multiple shift operations
    let bits = rng.next_u64();

    // Use bit masks for more efficient extraction
    let adj_idx = (bits & 0xFF) as usize % ADJECTIVES.len();
    let noun_idx = ((bits >> 8) & 0xFF) as usize % NOUNS.len();
    let verb_idx = ((bits >> 16) & 0xFF) as usize % VERBS.len();
    let tech_idx = ((bits >> 24) & 0xFF) as usize % TECH_WORDS.len();
    let suffix_idx = ((bits >> 32) & 0xFF) as usize % COMMON_SUFFIXES.len();

    let style = ((bits >> 40) & 0x0F) as u8;
    let use_verb = ((bits >> 44) & 0x01) != 0;
    let use_tech = ((bits >> 45) & 0x01) != 0;
    let capitalize_mode = ((bits >> 46) & 0x03) as u8;
    let number_pos = ((bits >> 48) & 0x03) as u8;
    let add_number = ((bits >> 60) & 0x01) != 0;

    // Determine word combination without nested function calls
    let (word1, word2) = match (use_verb, use_tech) {
        (true, false) => (VERBS[verb_idx], NOUNS[noun_idx]),
        (false, true) => (ADJECTIVES[adj_idx], TECH_WORDS[tech_idx]),
        (true, true) => (VERBS[verb_idx], TECH_WORDS[tech_idx]),
        (false, false) => {
            // Use bits we already have instead of generating new random numbers
            let combo_type = ((bits >> 50) & 0x03) as usize;
            match combo_type {
                0 => (ADJECTIVES[adj_idx], NOUNS[noun_idx]),
                1 => (ADJECTIVES[adj_idx], VERBS[verb_idx]),
                _ => (TECH_WORDS[tech_idx], NOUNS[noun_idx]),
            }
        }
    };

    // Apply style formatting - optimized to minimize allocations
    match style {
        0 => result.push_str(word1),
        1 => {
            // CamelCase
            capitalize_into(word1, &mut result);
            capitalize_into(word2, &mut result);
        }
        2 => {
            // snake_case
            result.push_str(word1);
            result.push('_');
            result.push_str(word2);
        }
        3 => {
            // kebab-case
            result.push_str(word1);
            result.push('-');
            result.push_str(word2);
        }
        4 => {
            // 全大写 - avoid intermediate allocations
            for c in word1.chars() {
                result.push(c.to_ascii_uppercase());
            }
            for c in word2.chars() {
                result.push(c.to_ascii_uppercase());
            }
        }
        5 => {
            // 随机大小写
            mix_case(word1, &mut result, rng);
            mix_case(word2, &mut result, rng);
        }
        6 => {
            // 嵌套组合
            let mid = word1.len() / 2;
            result.push_str(&word1[..mid]);
            result.push_str(word2);
            result.push_str(&word1[mid..]);
        }
        _ => {
            // 默认模式
            result.push_str(word1);
            result.push_str(word2);
        }
    }

    // Add suffix if needed (optimized to check before appending)
    if suffix_idx > 0 {
        result.push('_');
        result.push_str(COMMON_SUFFIXES[suffix_idx]);
    }

    // Add number if needed
    if add_number {
        let number = match number_pos {
            0 => rng.random_range(0..100).to_string(),
            1 => rng.random_range(100..1000).to_string(),
            2 => rng.random_range(1000..10000).to_string(),
            _ => format!("{:x}", rng.random::<u16>()),
        };

        match number_pos {
            0 => result.push_str(&number),
            1 => {
                // Insert in middle - optimized to avoid clone
                let mid = result.len() / 2;
                // Use a single allocation strategy
                let mut new_result = String::with_capacity(result.len() + number.len());
                new_result.push_str(&result[..mid]);
                new_result.push_str(&number);
                new_result.push_str(&result[mid..]);
                result = new_result;
            }
            2 => {
                // Prefix - optimized
                let mut new_result = String::with_capacity(result.len() + number.len());
                new_result.push_str(&number);
                new_result.push_str(&result);
                result = new_result;
            }
            _ => result.push_str(&number), // Default suffix
        }
    }

    // 1% chance to insert a random string at a random position
    if rng.next_u32() % 100 == 0 {
        let insert_len = 2 + (rng.next_u32() % 4) as usize; // 2~5 chars
        let insert_str = insert_random_str(rng, insert_len);

        let insert_pos = rng.next_u32() as usize % (result.len().saturating_add(1));
        let mut new_result = String::with_capacity(result.len() + insert_len);
        new_result.push_str(&result[..insert_pos]);
        new_result.push_str(&insert_str);
        new_result.push_str(&result[insert_pos..]);
        result = new_result;
    }

    // Apply final capitalization efficiently
    apply_capitalization(&mut result, capitalize_mode);

    result
}

// Optimized to push directly to the buffer
fn capitalize_into(s: &str, buf: &mut String) {
    let mut chars = s.chars();
    if let Some(first) = chars.next() {
        buf.push(first.to_ascii_uppercase());
        buf.extend(chars);
    }
}

// Optimized version pushing directly to buffer
fn mix_case<T: RngCore>(s: &str, buf: &mut String, rng: &mut T) {
    for c in s.chars() {
        // Use next_u32 with mask for better performance than gen_bool
        buf.push(if rng.next_u32() & 1 == 0 {
            c.to_ascii_uppercase()
        } else {
            c
        });
    }
}

// Efficient in-place capitalization
fn apply_capitalization(s: &mut String, mode: u8) {
    match mode {
        0 => {} // No change
        1 => {
            // All lowercase - in-place transformation
            for i in 0..s.len() {
                unsafe {
                    let bytes = s.as_bytes_mut();
                    if bytes[i].is_ascii_uppercase() {
                        bytes[i] = bytes[i].to_ascii_lowercase();
                    }
                }
            }
        }
        2 => {
            // All uppercase - in-place transformation
            for i in 0..s.len() {
                unsafe {
                    let bytes = s.as_bytes_mut();
                    if bytes[i].is_ascii_lowercase() {
                        bytes[i] = bytes[i].to_ascii_uppercase();
                    }
                }
            }
        }
        3 => {
            // Reverse case - in-place transformation
            for i in 0..s.len() {
                unsafe {
                    let bytes = s.as_bytes_mut();
                    if bytes[i].is_ascii_lowercase() {
                        bytes[i] = bytes[i].to_ascii_uppercase();
                    } else if bytes[i].is_ascii_uppercase() {
                        bytes[i] = bytes[i].to_ascii_lowercase();
                    }
                }
            }
        }
        _ => {} // Default - no change
    }
}

fn insert_random_str<T: RngCore>(rng: &mut T, len: usize) -> String {
    const CHARSET: &[u8] = b"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789";
    let mut s = String::with_capacity(len);
    for _ in 0..len {
        let idx = (rng.next_u32() as usize) % CHARSET.len();
        s.push(CHARSET[idx] as char);
    }
    s
}
